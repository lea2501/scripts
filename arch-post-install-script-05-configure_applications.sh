#!/bin/bash

################################
### DO NOT EDIT THIS FILE DIRECTLY, INSTEAD, COPY TO YOUR LOCAL ~/script directory and edit there
### $ mkdir ~/script
### $ cp scripts/<THIS_FILENAME> ~/script/
### $ cd ~/script/
### EDIT FILE
### $ ./<THIS_FILENAME>
################################

# fail if any commands fails
set -e
# debug log
#set -x

############ Script

options=(y n)
read -rp "Set keyboard layout?: (y|n)" setKeyboardLayout
if [[ " "${options[@]}" " != *" $setKeyboardLayout "* ]]; then
  echo "$setKeyboardLayout: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi
read -rp "Configure Git user options?: (y|n)" configureGit
if [[ " "${options[@]}" " != *" $configureGit "* ]]; then
  echo "$configureGit: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi
read -rp "Set Java default version to openjdk 11?: (y|n)" setJavaDefault
if [[ " "${options[@]}" " != *" $setJavaDefault "* ]]; then
  echo "$setJavaDefault: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi
read -rp "Apply fix for misbehaving java applications? (Only needed if using dwm window manager): (y|n)" applyJavaApplicationsFix
if [[ " "${options[@]}" " != *" $applyJavaApplicationsFix "* ]]; then
  echo "$applyJavaApplicationsFix: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi
read -rp "Start Docker service?: (y|n)" startDockerService
if [[ " "${options[@]}" " != *" $startDockerService "* ]]; then
  echo "$startDockerService: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi
read -rp "Start NTP service?: (y|n)" startNtpService
if [[ " "${options[@]}" " != *" $startNtpService "* ]]; then
  echo "$startNtpService: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi
read -rp "Enable Bash Git Prompt? (Show git branch in command prompt): (y|n)" enableBashGitPrompt
if [[ " "${options[@]}" " != *" $enableBashGitPrompt "* ]]; then
  echo "$enableBashGitPrompt: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi
read -rp "Update Clamav virus definitions?: (y|n)" updateClamavVirusDefinitions
if [[ " "${options[@]}" " != *" $updateClamavVirusDefinitions "* ]]; then
  echo "$updateClamavVirusDefinitions: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi
read -rp "Create user bin directory?: (y|n)" createUserBinDirectory
if [[ " "${options[@]}" " != *" $createUserBinDirectory "* ]]; then
  echo "$createUserBinDirectory: not recognized. Valid options are:"
  echo "${options[@]/%/,}"
  exit 1
fi

# Configure applications
echo "Configuring applications..."
cd || return
# Set keyboard layout
if [ "$setKeyboardLayout" = "y" ]; then
  echo "setxkbmap -layout latam -variant deadtilde" >>~/.bash_profile
fi

# Configure GIT
if [ "$configureGit" = "y" ]; then
  echo "Configuring Git options..."
  read -rp "Enter Git user email: " gitUserEmail
  git config --global user.email "$gitUserEmail"
  read -rp "Enter Git user name: " gitUserName
  git config --global user.name "$gitUserName"
  git config --global pull.rebase false
  echo "Configuring Git options... DONE"
fi

# Set java 11
if [ "$setJavaDefault" = "y" ]; then
  echo "Setting java default version..."
  sudo archlinux-java set java-11-openjdk
  echo "Setting java default version... DONE"
fi

# fix java apps
if [ "$applyJavaApplicationsFix" = "y" ]; then
  echo "Apply fix for misbehaving java applications..."
  sudo echo "export _JAVA_AWT_WM_NONREPARENTING=1" | sudo tee -a /etc/profile.d/jre.sh
  #echo "export AWT_TOOLKIT=MToolkit" >> ~/.xinitrc
  #echo "wmname compiz"
  echo "Apply fix for misbehaving java applications... DONE"
fi

# start docker
if [ "$startDockerService" = "y" ]; then
  echo "Enabling and starting docker service..."
  sudo systemctl enable docker
  sudo systemctl start docker
  echo "Enabling and starting docker service... DONE"
fi

# start docker
if [ "$startNtpService" = "y" ]; then
  echo "Enabling and starting ntp service..."
  sudo systemctl enable ntpdate.service
  sudo systemctl start ntpdate.service
  echo "Enabling and starting ntp service... DONE"
fi

# enable bash-git-prompt
if [ "$enableBashGitPrompt" = "y" ]; then
  echo "Enabling Bash git prompt..."

  {
    echo "if [ -f /usr/lib/bash-git-prompt/gitprompt.sh ]; then"
    echo "    # To only show the git prompt in or under a repository directory"
    echo "     GIT_PROMPT_ONLY_IN_REPO=1"
    echo "    # To use upstream's default theme"
    echo "     GIT_PROMPT_THEME=Default"
    echo "    # To use upstream's default theme, modified by arch maintainer"
    echo "    # GIT_PROMPT_THEME=Default_Arch"
    echo "    source /usr/lib/bash-git-prompt/gitprompt.sh"
    echo "fi"
  }>>~/.bashrc
  source ~/.bashrc

  echo "Enabling Bash git prompt... DONE"
fi

# update clamav definition database
if [ "$updateClamavVirusDefinitions" = "y" ]; then
  echo "Updating clamav virus definition database..."
  sudo freshclam
  echo "Updating clamav virus definition database... Done"
fi

# home bin directory
if [ "$createUserBinDirectory" = "y" ]; then
  echo "Creating user 'bin' directory..."
  cd || return
  mkdir -p ~/bin
  echo "PATH=\$PATH:~/bin/" >>~/.bashrc
  source ~/.bashrc
  echo "Creating user 'bin' directory... DONE"
fi